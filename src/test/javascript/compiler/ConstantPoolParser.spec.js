var server = sinon.fakeServer.create();
server.autoRespond = true;
server.respondWith("GET", "../rt/java/lang/Object.json",
	[200, { "Content-Type": "application/json" }, 
		"[202,254,186,190,0,0,0,51,0,87,7,0,58,10,0,1,0,59,10,0,18,0,60,10,0,61,0,62,10,0,1,0,63,8,0,64,10,0,18,0,65,10,0,66,0,67,10,0,1,0,68,7,0,69,8,0,70,10,0,10,0,71,3,0,15,66,63,8,0,72,3,0,7,161,32,10,0,18,0,73,10,0,18,0,74,7,0,75,1,0,6,60,105,110,105,116,62,1,0,3,40,41,86,1,0,4,67,111,100,101,1,0,15,76,105,110,101,78,117,109,98,101,114,84,97,98,108,101,1,0,18,76,111,99,97,108,86,97,114,105,97,98,108,101,84,97,98,108,101,1,0,4,116,104,105,115,1,0,18,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,1,0,15,114,101,103,105,115,116,101,114,78,97,116,105,118,101,115,1,0,8,103,101,116,67,108,97,115,115,1,0,19,40,41,76,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,59,1,0,9,83,105,103,110,97,116,117,114,101,1,0,22,40,41,76,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,60,42,62,59,1,0,8,104,97,115,104,67,111,100,101,1,0,3,40,41,73,1,0,6,101,113,117,97,108,115,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,41,90,1,0,3,111,98,106,1,0,13,83,116,97,99,107,77,97,112,84,97,98,108,101,1,0,5,99,108,111,110,101,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,59,1,0,10,69,120,99,101,112,116,105,111,110,115,7,0,76,1,0,8,116,111,83,116,114,105,110,103,1,0,20,40,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,6,110,111,116,105,102,121,1,0,9,110,111,116,105,102,121,65,108,108,1,0,4,119,97,105,116,1,0,4,40,74,41,86,7,0,77,1,0,5,40,74,73,41,86,1,0,7,116,105,109,101,111,117,116,1,0,1,74,1,0,5,110,97,110,111,115,1,0,1,73,1,0,8,102,105,110,97,108,105,122,101,7,0,78,1,0,8,60,99,108,105,110,105,116,62,1,0,10,83,111,117,114,99,101,70,105,108,101,1,0,11,79,98,106,101,99,116,46,106,97,118,97,1,0,23,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,12,0,19,0,20,12,0,27,0,28,7,0,79,12,0,80,0,42,12,0,81,0,82,1,0,1,64,12,0,31,0,32,7,0,83,12,0,84,0,85,12,0,41,0,42,1,0,34,106,97,118,97,47,108,97,110,103,47,73,108,108,101,103,97,108,65,114,103,117,109,101,110,116,69,120,99,101,112,116,105,111,110,1,0,25,116,105,109,101,111,117,116,32,118,97,108,117,101,32,105,115,32,110,101,103,97,116,105,118,101,12,0,19,0,86,1,0,37,110,97,110,111,115,101,99,111,110,100,32,116,105,109,101,111,117,116,32,118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101,12,0,45,0,46,12,0,26,0,20,1,0,16,106,97,118,97,47,108,97,110,103,47,79,98,106,101,99,116,1,0,36,106,97,118,97,47,108,97,110,103,47,67,108,111,110,101,78,111,116,83,117,112,112,111,114,116,101,100,69,120,99,101,112,116,105,111,110,1,0,30,106,97,118,97,47,108,97,110,103,47,73,110,116,101,114,114,117,112,116,101,100,69,120,99,101,112,116,105,111,110,1,0,19,106,97,118,97,47,108,97,110,103,47,84,104,114,111,119,97,98,108,101,1,0,15,106,97,118,97,47,108,97,110,103,47,67,108,97,115,115,1,0,7,103,101,116,78,97,109,101,1,0,6,97,112,112,101,110,100,1,0,45,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,66,117,105,108,100,101,114,59,1,0,17,106,97,118,97,47,108,97,110,103,47,73,110,116,101,103,101,114,1,0,11,116,111,72,101,120,83,116,114,105,110,103,1,0,21,40,73,41,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,1,0,21,40,76,106,97,118,97,47,108,97,110,103,47,83,116,114,105,110,103,59,41,86,0,33,0,18,0,0,0,0,0,0,0,14,0,1,0,19,0,20,0,1,0,21,0,0,0,43,0,0,0,1,0,0,0,1,177,0,0,0,2,0,22,0,0,0,6,0,1,0,0,0,37,0,23,0,0,0,12,0,1,0,0,0,1,0,24,0,25,0,0,1,10,0,26,0,20,0,0,1,17,0,27,0,28,0,1,0,29,0,0,0,2,0,30,1,1,0,31,0,32,0,0,0,1,0,33,0,34,0,1,0,21,0,0,0,74,0,2,0,2,0,0,0,11,42,43,166,0,7,4,167,0,4,3,172,0,0,0,3,0,22,0,0,0,6,0,1,0,0,0,150,0,23,0,0,0,22,0,2,0,0,0,11,0,24,0,25,0,0,0,0,0,11,0,35,0,25,0,1,0,36,0,0,0,5,0,2,9,64,1,1,4,0,37,0,38,0,1,0,39,0,0,0,4,0,1,0,40,0,1,0,41,0,42,0,1,0,21,0,0,0,78,0,2,0,1,0,0,0,36,187,0,1,89,183,0,2,42,182,0,3,182,0,4,182,0,5,18,6,182,0,5,42,182,0,7,184,0,8,182,0,5,182,0,9,176,0,0,0,2,0,22,0,0,0,6,0,1,0,0,0,237,0,23,0,0,0,12,0,1,0,0,0,36,0,24,0,25,0,0,1,17,0,43,0,20,0,0,1,17,0,44,0,20,0,0,1,17,0,45,0,46,0,1,0,39,0,0,0,4,0,1,0,47,0,17,0,45,0,48,0,2,0,21,0,0,0,165,0,4,0,4,0,0,0,62,31,9,148,156,0,13,187,0,10,89,18,11,183,0,12,191,29,155,0,9,29,18,13,164,0,13,187,0,10,89,18,14,183,0,12,191,29,18,15,162,0,13,29,153,0,13,31,9,148,154,0,7,31,10,97,64,42,31,182,0,16,177,0,0,0,3,0,22,0,0,0,34,0,8,0,0,1,192,0,6,1,193,0,16,1,196,0,26,1,197,0,36,1,201,0,52,1,202,0,56,1,205,0,61,1,206,0,23,0,0,0,32,0,3,0,0,0,62,0,24,0,25,0,0,0,0,0,62,0,49,0,50,0,1,0,0,0,62,0,51,0,52,0,3,0,36,0,0,0,7,0,5,16,9,9,15,3,0,39,0,0,0,4,0,1,0,47,0,17,0,45,0,20,0,2,0,21,0,0,0,52,0,3,0,1,0,0,0,6,42,9,182,0,16,177,0,0,0,2,0,22,0,0,0,10,0,2,0,0,1,247,0,5,1,248,0,23,0,0,0,12,0,1,0,0,0,6,0,24,0,25,0,0,0,39,0,0,0,4,0,1,0,47,0,4,0,53,0,20,0,2,0,21,0,0,0,43,0,0,0,1,0,0,0,1,177,0,0,0,2,0,22,0,0,0,6,0,1,0,0,2,41,0,23,0,0,0,12,0,1,0,0,0,1,0,24,0,25,0,0,0,39,0,0,0,4,0,1,0,54,0,8,0,55,0,20,0,1,0,21,0,0,0,32,0,0,0,0,0,0,0,4,184,0,17,177,0,0,0,1,0,22,0,0,0,10,0,2,0,0,0,41,0,3,0,42,0,1,0,56,0,0,0,2,0,57]"
	]
);

describe("ByteCode test", function () {
	it("should process all constant pool values", function () {
		var file = [
			0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x32,
			0x00, 0x4e, 0x0a, 0x00, 0x19, 0x00, 0x2c, 0x03,
			0x00, 0x04, 0x78, 0xe3, 0x09, 0x00, 0x0e, 0x00,
			0x2d, 0x04, 0x49, 0x94, 0xd0, 0x53, 0x09, 0x00,
			0x0e, 0x00, 0x2e, 0x05, 0x03, 0x3f, 0x70, 0xe6,
			0x13, 0xa5, 0xd8, 0xd7, 0x09, 0x00, 0x0e, 0x00,
			0x2f, 0x06, 0x42, 0x81, 0x07, 0x25, 0x35, 0xbd,
			0xda, 0x3e, 0x09, 0x00, 0x0e, 0x00, 0x30, 0x08,
			0x00, 0x31, 0x09, 0x00, 0x0e, 0x00, 0x32, 0x07,
			0x00, 0x33, 0x0a, 0x00, 0x0e, 0x00, 0x2c, 0x0b,
			0x00, 0x34, 0x00, 0x35, 0x09, 0x00, 0x36, 0x00,
			0x37, 0x07, 0x00, 0x38, 0x0a, 0x00, 0x12, 0x00,
			0x2c, 0x08, 0x00, 0x39, 0x0a, 0x00, 0x12, 0x00,
			0x3a, 0x0a, 0x00, 0x12, 0x00, 0x3b, 0x0a, 0x00,
			0x12, 0x00, 0x3c, 0x0a, 0x00, 0x3d, 0x00, 0x3e,
			0x07, 0x00, 0x3f, 0x01, 0x00, 0x0a, 0x70, 0x72,
			0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
			0x01, 0x00, 0x01, 0x49, 0x01, 0x00, 0x0c, 0x70,
			0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x6c,
			0x6f, 0x61, 0x74, 0x01, 0x00, 0x01, 0x46, 0x01,
			0x00, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
			0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x01, 0x00, 0x01,
			0x4a, 0x01, 0x00, 0x0d, 0x70, 0x72, 0x69, 0x76,
			0x61, 0x74, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c,
			0x65, 0x01, 0x00, 0x01, 0x44, 0x01, 0x00, 0x0d,
			0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53,
			0x74, 0x72, 0x69, 0x6e, 0x67, 0x01, 0x00, 0x18,
			0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x43, 0x68, 0x61, 0x72, 0x53,
			0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x3b,
			0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74,
			0x3e, 0x01, 0x00, 0x03, 0x28, 0x29, 0x56, 0x01,
			0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00,
			0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
			0x62, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
			0x01, 0x00, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x01,
			0x00, 0x16, 0x28, 0x5b, 0x4c, 0x6a, 0x61, 0x76,
			0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x53,
			0x74, 0x72, 0x69, 0x6e, 0x67, 0x3b, 0x29, 0x56,
			0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
			0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x12,
			0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78,
			0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6a, 0x61,
			0x76, 0x61, 0x0c, 0x00, 0x24, 0x00, 0x25, 0x0c,
			0x00, 0x1a, 0x00, 0x1b, 0x0c, 0x00, 0x1c, 0x00,
			0x1d, 0x0c, 0x00, 0x1e, 0x00, 0x1f, 0x0c, 0x00,
			0x20, 0x00, 0x21, 0x01, 0x00, 0x0b, 0x48, 0x65,
			0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c,
			0x64, 0x0c, 0x00, 0x22, 0x00, 0x23, 0x01, 0x00,
			0x0d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45,
			0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x07, 0x00,
			0x40, 0x0c, 0x00, 0x41, 0x00, 0x42, 0x07, 0x00,
			0x43, 0x0c, 0x00, 0x44, 0x00, 0x45, 0x01, 0x00,
			0x17, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
			0x01, 0x00, 0x12, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
			0x20, 0x77, 0x61, 0x73, 0x20, 0x0c, 0x00, 0x46,
			0x00, 0x47, 0x0c, 0x00, 0x46, 0x00, 0x48, 0x0c,
			0x00, 0x49, 0x00, 0x4a, 0x07, 0x00, 0x4b, 0x0c,
			0x00, 0x4c, 0x00, 0x4d, 0x01, 0x00, 0x10, 0x6a,
			0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
			0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x01,
			0x00, 0x16, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c,
			0x61, 0x6e, 0x67, 0x2f, 0x43, 0x68, 0x61, 0x72,
			0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
			0x01, 0x00, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
			0x68, 0x01, 0x00, 0x03, 0x28, 0x29, 0x49, 0x01,
			0x00, 0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c,
			0x61, 0x6e, 0x67, 0x2f, 0x53, 0x79, 0x73, 0x74,
			0x65, 0x6d, 0x01, 0x00, 0x03, 0x6f, 0x75, 0x74,
			0x01, 0x00, 0x15, 0x4c, 0x6a, 0x61, 0x76, 0x61,
			0x2f, 0x69, 0x6f, 0x2f, 0x50, 0x72, 0x69, 0x6e,
			0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x3b,
			0x01, 0x00, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e,
			0x64, 0x01, 0x00, 0x2d, 0x28, 0x4c, 0x6a, 0x61,
			0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
			0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3b, 0x29,
			0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
			0x3b, 0x01, 0x00, 0x1c, 0x28, 0x49, 0x29, 0x4c,
			0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e,
			0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
			0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x3b,
			0x01, 0x00, 0x08, 0x74, 0x6f, 0x53, 0x74, 0x72,
			0x69, 0x6e, 0x67, 0x01, 0x00, 0x14, 0x28, 0x29,
			0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x3b, 0x01, 0x00, 0x13, 0x6a, 0x61, 0x76,
			0x61, 0x2f, 0x69, 0x6f, 0x2f, 0x50, 0x72, 0x69,
			0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
			0x01, 0x00, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74,
			0x6c, 0x6e, 0x01, 0x00, 0x15, 0x28, 0x4c, 0x6a,
			0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
			0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3b,
			0x29, 0x56, 0x00, 0x21, 0x00, 0x0e, 0x00, 0x19,
			0x00, 0x00, 0x00, 0x05, 0x00, 0x02, 0x00, 0x1a,
			0x00, 0x1b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1c,
			0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1e,
			0x00, 0x1f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x20,
			0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x22,
			0x00, 0x23, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01,
			0x00, 0x24, 0x00, 0x25, 0x00, 0x01, 0x00, 0x26,
			0x00, 0x00, 0x00, 0x51, 0x00, 0x03, 0x00, 0x01,
			0x00, 0x00, 0x00, 0x25, 0x2a, 0xb7, 0x00, 0x01,
			0x2a, 0x12, 0x02, 0xb5, 0x00, 0x03, 0x2a, 0x12,
			0x04, 0xb5, 0x00, 0x05, 0x2a, 0x14, 0x00, 0x06,
			0xb5, 0x00, 0x08, 0x2a, 0x14, 0x00, 0x09, 0xb5,
			0x00, 0x0b, 0x2a, 0x12, 0x0c, 0xb5, 0x00, 0x0d,
			0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x27, 0x00,
			0x00, 0x00, 0x1a, 0x00, 0x06, 0x00, 0x00, 0x00,
			0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x0a, 0x00,
			0x03, 0x00, 0x10, 0x00, 0x04, 0x00, 0x17, 0x00,
			0x05, 0x00, 0x1e, 0x00, 0x06, 0x00, 0x09, 0x00,
			0x28, 0x00, 0x29, 0x00, 0x01, 0x00, 0x26, 0x00,
			0x00, 0x00, 0x50, 0x00, 0x03, 0x00, 0x03, 0x00,
			0x00, 0x00, 0x2c, 0xbb, 0x00, 0x0e, 0x59, 0xb7,
			0x00, 0x0f, 0x4c, 0x2b, 0xb4, 0x00, 0x0d, 0xb9,
			0x00, 0x10, 0x01, 0x00, 0x3d, 0xb2, 0x00, 0x11,
			0xbb, 0x00, 0x12, 0x59, 0xb7, 0x00, 0x13, 0x12,
			0x14, 0xb6, 0x00, 0x15, 0x1c, 0xb6, 0x00, 0x16,
			0xb6, 0x00, 0x17, 0xb6, 0x00, 0x18, 0xb1, 0x00,
			0x00, 0x00, 0x01, 0x00, 0x27, 0x00, 0x00, 0x00,
			0x12, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00,
			0x08, 0x00, 0x0a, 0x00, 0x12, 0x00, 0x0c, 0x00,
			0x2b, 0x00, 0x0d, 0x00, 0x01, 0x00, 0x2a, 0x00,
			0x00, 0x00, 0x02, 0x00, 0x2b
		];

		var compiler = new jjvm.compiler.Compiler();
		compiler.compileBytes(file);

		var classDef = jjvm.core.ClassLoader.loadClass("SimpleExample");
		var constantPool = classDef.getConstantPool();

		//console.info(constantPool.toJavaP());

		// should have parsed int correctly
		expect(constantPool.load(2).getValue()).toEqual(293091);

		// should have parsed float correctly
		expect(constantPool.load(4).getValue()).toEqual(1219082.375);

		// should have parsed long correctly
		expect(constantPool.load(6).getValue()).toEqual(234029839120980183);

		// should have parsed double correctly
		expect(constantPool.load(9).getValue()).toEqual(2340298340283.5);
	});
});

