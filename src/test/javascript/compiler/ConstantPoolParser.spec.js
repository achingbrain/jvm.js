
describe("ByteCode test", function () {
	it("should process all constant pool values", function () {
		var file = [
			0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x32,
			0x00, 0x4e, 0x0a, 0x00, 0x19, 0x00, 0x2c, 0x03,
			0x00, 0x04, 0x78, 0xe3, 0x09, 0x00, 0x0e, 0x00,
			0x2d, 0x04, 0x49, 0x94, 0xd0, 0x53, 0x09, 0x00,
			0x0e, 0x00, 0x2e, 0x05, 0x03, 0x3f, 0x70, 0xe6,
			0x13, 0xa5, 0xd8, 0xd7, 0x09, 0x00, 0x0e, 0x00,
			0x2f, 0x06, 0x42, 0x81, 0x07, 0x25, 0x35, 0xbd,
			0xda, 0x3e, 0x09, 0x00, 0x0e, 0x00, 0x30, 0x08,
			0x00, 0x31, 0x09, 0x00, 0x0e, 0x00, 0x32, 0x07,
			0x00, 0x33, 0x0a, 0x00, 0x0e, 0x00, 0x2c, 0x0b,
			0x00, 0x34, 0x00, 0x35, 0x09, 0x00, 0x36, 0x00,
			0x37, 0x07, 0x00, 0x38, 0x0a, 0x00, 0x12, 0x00,
			0x2c, 0x08, 0x00, 0x39, 0x0a, 0x00, 0x12, 0x00,
			0x3a, 0x0a, 0x00, 0x12, 0x00, 0x3b, 0x0a, 0x00,
			0x12, 0x00, 0x3c, 0x0a, 0x00, 0x3d, 0x00, 0x3e,
			0x07, 0x00, 0x3f, 0x01, 0x00, 0x0a, 0x70, 0x72,
			0x69, 0x76, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
			0x01, 0x00, 0x01, 0x49, 0x01, 0x00, 0x0c, 0x70,
			0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x6c,
			0x6f, 0x61, 0x74, 0x01, 0x00, 0x01, 0x46, 0x01,
			0x00, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
			0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x01, 0x00, 0x01,
			0x4a, 0x01, 0x00, 0x0d, 0x70, 0x72, 0x69, 0x76,
			0x61, 0x74, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c,
			0x65, 0x01, 0x00, 0x01, 0x44, 0x01, 0x00, 0x0d,
			0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53,
			0x74, 0x72, 0x69, 0x6e, 0x67, 0x01, 0x00, 0x18,
			0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x43, 0x68, 0x61, 0x72, 0x53,
			0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x3b,
			0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74,
			0x3e, 0x01, 0x00, 0x03, 0x28, 0x29, 0x56, 0x01,
			0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00,
			0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
			0x62, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
			0x01, 0x00, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x01,
			0x00, 0x16, 0x28, 0x5b, 0x4c, 0x6a, 0x61, 0x76,
			0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x53,
			0x74, 0x72, 0x69, 0x6e, 0x67, 0x3b, 0x29, 0x56,
			0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
			0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x12,
			0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45, 0x78,
			0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x6a, 0x61,
			0x76, 0x61, 0x0c, 0x00, 0x24, 0x00, 0x25, 0x0c,
			0x00, 0x1a, 0x00, 0x1b, 0x0c, 0x00, 0x1c, 0x00,
			0x1d, 0x0c, 0x00, 0x1e, 0x00, 0x1f, 0x0c, 0x00,
			0x20, 0x00, 0x21, 0x01, 0x00, 0x0b, 0x48, 0x65,
			0x6c, 0x6c, 0x6f, 0x20, 0x77, 0x6f, 0x72, 0x6c,
			0x64, 0x0c, 0x00, 0x22, 0x00, 0x23, 0x01, 0x00,
			0x0d, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45,
			0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x07, 0x00,
			0x40, 0x0c, 0x00, 0x41, 0x00, 0x42, 0x07, 0x00,
			0x43, 0x0c, 0x00, 0x44, 0x00, 0x45, 0x01, 0x00,
			0x17, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
			0x01, 0x00, 0x12, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x20, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
			0x20, 0x77, 0x61, 0x73, 0x20, 0x0c, 0x00, 0x46,
			0x00, 0x47, 0x0c, 0x00, 0x46, 0x00, 0x48, 0x0c,
			0x00, 0x49, 0x00, 0x4a, 0x07, 0x00, 0x4b, 0x0c,
			0x00, 0x4c, 0x00, 0x4d, 0x01, 0x00, 0x10, 0x6a,
			0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
			0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x01,
			0x00, 0x16, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c,
			0x61, 0x6e, 0x67, 0x2f, 0x43, 0x68, 0x61, 0x72,
			0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
			0x01, 0x00, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
			0x68, 0x01, 0x00, 0x03, 0x28, 0x29, 0x49, 0x01,
			0x00, 0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c,
			0x61, 0x6e, 0x67, 0x2f, 0x53, 0x79, 0x73, 0x74,
			0x65, 0x6d, 0x01, 0x00, 0x03, 0x6f, 0x75, 0x74,
			0x01, 0x00, 0x15, 0x4c, 0x6a, 0x61, 0x76, 0x61,
			0x2f, 0x69, 0x6f, 0x2f, 0x50, 0x72, 0x69, 0x6e,
			0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x3b,
			0x01, 0x00, 0x06, 0x61, 0x70, 0x70, 0x65, 0x6e,
			0x64, 0x01, 0x00, 0x2d, 0x28, 0x4c, 0x6a, 0x61,
			0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
			0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3b, 0x29,
			0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
			0x3b, 0x01, 0x00, 0x1c, 0x28, 0x49, 0x29, 0x4c,
			0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e,
			0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
			0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x3b,
			0x01, 0x00, 0x08, 0x74, 0x6f, 0x53, 0x74, 0x72,
			0x69, 0x6e, 0x67, 0x01, 0x00, 0x14, 0x28, 0x29,
			0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
			0x6e, 0x67, 0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e,
			0x67, 0x3b, 0x01, 0x00, 0x13, 0x6a, 0x61, 0x76,
			0x61, 0x2f, 0x69, 0x6f, 0x2f, 0x50, 0x72, 0x69,
			0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
			0x01, 0x00, 0x07, 0x70, 0x72, 0x69, 0x6e, 0x74,
			0x6c, 0x6e, 0x01, 0x00, 0x15, 0x28, 0x4c, 0x6a,
			0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
			0x2f, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3b,
			0x29, 0x56, 0x00, 0x21, 0x00, 0x0e, 0x00, 0x19,
			0x00, 0x00, 0x00, 0x05, 0x00, 0x02, 0x00, 0x1a,
			0x00, 0x1b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1c,
			0x00, 0x1d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1e,
			0x00, 0x1f, 0x00, 0x00, 0x00, 0x02, 0x00, 0x20,
			0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x22,
			0x00, 0x23, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01,
			0x00, 0x24, 0x00, 0x25, 0x00, 0x01, 0x00, 0x26,
			0x00, 0x00, 0x00, 0x51, 0x00, 0x03, 0x00, 0x01,
			0x00, 0x00, 0x00, 0x25, 0x2a, 0xb7, 0x00, 0x01,
			0x2a, 0x12, 0x02, 0xb5, 0x00, 0x03, 0x2a, 0x12,
			0x04, 0xb5, 0x00, 0x05, 0x2a, 0x14, 0x00, 0x06,
			0xb5, 0x00, 0x08, 0x2a, 0x14, 0x00, 0x09, 0xb5,
			0x00, 0x0b, 0x2a, 0x12, 0x0c, 0xb5, 0x00, 0x0d,
			0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x27, 0x00,
			0x00, 0x00, 0x1a, 0x00, 0x06, 0x00, 0x00, 0x00,
			0x01, 0x00, 0x04, 0x00, 0x02, 0x00, 0x0a, 0x00,
			0x03, 0x00, 0x10, 0x00, 0x04, 0x00, 0x17, 0x00,
			0x05, 0x00, 0x1e, 0x00, 0x06, 0x00, 0x09, 0x00,
			0x28, 0x00, 0x29, 0x00, 0x01, 0x00, 0x26, 0x00,
			0x00, 0x00, 0x50, 0x00, 0x03, 0x00, 0x03, 0x00,
			0x00, 0x00, 0x2c, 0xbb, 0x00, 0x0e, 0x59, 0xb7,
			0x00, 0x0f, 0x4c, 0x2b, 0xb4, 0x00, 0x0d, 0xb9,
			0x00, 0x10, 0x01, 0x00, 0x3d, 0xb2, 0x00, 0x11,
			0xbb, 0x00, 0x12, 0x59, 0xb7, 0x00, 0x13, 0x12,
			0x14, 0xb6, 0x00, 0x15, 0x1c, 0xb6, 0x00, 0x16,
			0xb6, 0x00, 0x17, 0xb6, 0x00, 0x18, 0xb1, 0x00,
			0x00, 0x00, 0x01, 0x00, 0x27, 0x00, 0x00, 0x00,
			0x12, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00,
			0x08, 0x00, 0x0a, 0x00, 0x12, 0x00, 0x0c, 0x00,
			0x2b, 0x00, 0x0d, 0x00, 0x01, 0x00, 0x2a, 0x00,
			0x00, 0x00, 0x02, 0x00, 0x2b
		];

		var compiler = new jjvm.compiler.Compiler();
		compiler.compileBytes(file);

		var classDef = jjvm.core.ClassLoader.loadClass("SimpleExample");
		var constantPool = classDef.getConstantPool();

		//console.info(constantPool.toJavaP());

		// should have parsed int correctly
		expect(constantPool.load(2).getValue()).toEqual(293091);

		// should have parsed float correctly
		expect(constantPool.load(4).getValue()).toEqual(1219082.375);

		// should have parsed long correctly
		expect(constantPool.load(6).getValue()).toEqual(234029839120980183);

		// should have parsed double correctly
		expect(constantPool.load(9).getValue()).toEqual(2340298340283.5);
	});
});

